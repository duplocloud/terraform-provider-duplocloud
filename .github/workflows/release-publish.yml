name: Publish Release
on:
  push:
    tags:
      - 'v*'
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Unshallow
        run: git fetch --prune --unshallow
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      -
        name: Run tests
        run: make test
      -
        name: Import GPG key
        id: import_gpg
        uses: hashicorp/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      -
        name: Build and draft the release
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --parallelism 2 --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.DUPLO_GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      - 
        name: Get draft release ID
        id: get_release
        uses: agners/get-draft-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.DUPLO_GITHUB_TOKEN }}
      -
        name: Publish the release
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.DUPLO_GITHUB_TOKEN }}
          script: |
            github.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: '${{ steps.get_release.outputs.id }}',
              draft: false
            });
