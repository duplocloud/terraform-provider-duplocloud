name: Start Hotfix
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Override Version'
        required: false
        default: '' # default to current version
env:
  git_user: duplo-bot
  git_email: tahir+github-bot@duplocloud.net
jobs:
  start-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master                # Always hotfix from master
          fetch-depth: 0
          persist-credentials: false  # Needed so we can push with different credentials.
                                      # NOTE: Pushing with different credentials allows admins to push protected branches.
                                      # NOTE: Pushing with different credentials allow workflows to trigger from the push.

      # GET THE HOTFIX VERSION
      - name: Get hotfix version
        id: version
        run: |
          # Fail on errors
          set -euo pipefail

          # Use the current version if it is not being overridden
          if [ -z "${{ github.event.inputs.version }}" ]; then
            echo "hotfix=$(echo $(sed -ne 's/^VERSION=\([0-9\.]*\).*$/\1/p' <Makefile) | awk -F. -v OFS=. '{$NF += 1 ; print}')" >>$GITHUB_OUTPUT

          # Otherwise, the use the overridden version.
          else
            echo "hotfix=${{ github.event.inputs.version }}" >>$GITHUB_OUTPUT
          fi

      # START THE HOTFIX
      - name: Initialize mandatory git config
        run: |
          git config --global user.name $git_user &&
          git config --global user.email $git_email
      - name: Start gitflow hotfix
        uses: duplocloud/ghactions-start-gitflow-release@master
        with:
          github_token: ${{ secrets.DUPLO_GITHUB_TOKEN }}
          version: "${{ steps.version.outputs.hotfix }}"
          is_hotfix: true
          precommit_run: |
            # Fail on errors
            set -euo pipefail

            # Update generated documentation
            make doc

            # Optionally override the hotfix version
            version="${{ steps.version.outputs.hotfix }}"

            # Replace the version number in all affected files
            sed -e 's/^\(VERSION=\)[0-9\.]*/\1'"$version"'/g' -i Makefile
            find examples -name main.tf -exec \
              sed -e 's/\(version = "\)[0-9\.]*\(".*# RELEASE VERSION\)/\1'"$version"'\2/g' -i \{\} \;
